<?xml version="1.0" encoding="UTF-8"?>
	<beans xmlns="http://www.springframework.org/schema/beans"
		   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		   xmlns:aop="http://www.springframework.org/schema/aop"
		   xmlns:p="http://www.springframework.org/schema/p"
		   xmlns:context="http://www.springframework.org/schema/context"
		   xmlns:tx="http://www.springframework.org/schema/tx"
		   xsi:schemaLocation="http://www.springframework.org/schema/beans
		   http://www.springframework.org/schema/beans/spring-beans.xsd
		   http://www.springframework.org/schema/context
		   http://www.springframework.org/schema/context/spring-context-4.1.xsd
		   http://www.springframework.org/schema/aop
		   http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		   http://www.springframework.org/schema/tx
		   http://www.springframework.org/schema/tx/spring-tx-4.1.xsd" >

	<context:property-placeholder location="classpath:config/jdbc.properties" />

	<!-- Declare a datasource that has pooling capabilities -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<!--maxActive: 最大连接数量-->
		<property name="maxActive" value="${maxActive}"/>
		<!--minIdle: 最小空闲连接-->
		<property name="minIdle" value="${minIdle}"/>
		<!--maxIdle: 最大空闲连接-->
		<property name="maxIdle" value="${maxIdle}"/>
		<!--initialSize: 初始化连接-->
		<property name="initialSize" value="${initialSize}"/>
		<!--  连接被泄露时是否打印 -->
		<property name="logAbandoned" value="${logAbandoned}"/>
		<!--   removeAbandoned: 是否自动回收超时连接 -->
		<property name="removeAbandoned" value="${removeAbandoned}"/>
		<!--  removeAbandonedTimeout: 超时时间(以秒数为单位) -->
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
		<!--   maxWait: 超时等待时间以毫秒为单位 1000等于60秒 -->
		<property name="maxWait" value="${maxWait}"/>
		<!--   在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->
		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"/>
		<!--   在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->
		<property name="numTestsPerEvictionRun" value="${numTestsPerEvictionRun}"/>
		<!--    1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程 -->
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"/>
		<property name="validationQuery" value="${validationQuery}"/>
		<!-- 定时对线程池中的链接进行validateObject校验，对无效的链接进行关闭 -->
		<!--  <property name="testWhileIdle" value="${testWhileIdle}"/>   -->
		<!-- 指定在从连接池中拿连接时，要检查连接是否有效，若无效会将连接从连接池中移除掉 -->
		<property name="testOnBorrow" value="${testOnBorrow}"/>
	</bean>

	<!-- Declare a transaction manager -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />

	<!-- MyBatis SqlSessionFactoryBean 配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:config/mybatis/mybatis-config.xml" />
        <property name="mapperLocations" value="classpath:org/buzheng/demo/esm/dao/mybatis/*Mapper.xml" />
        <property name="typeAliasesPackage" value="org.buzheng.demo.esm.domain" />
    </bean>

	<!-- 加载 mapper.xml 接口 配置文件 -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.buzheng.demo.esm.dao" />
	</bean>

	<!-- 事务注解驱动，标注@Transactional的类和方法将具有事务性 -->
	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" />

</beans>